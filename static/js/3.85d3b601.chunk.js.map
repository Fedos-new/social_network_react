{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","SetEditMode","status","EditStatus","useEffect","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","onDoubleClick","ProfileInfo","profile","className","s","descriptionBlock","alt","src","photos","large","fullName","aboutMe","lookingForAJob","getArray","contacts","map","el","Preloader","Post","item","content","message","likeCount","icon","faThumbsUp","iconLike","MyPosts","React","memo","postsElements","posts","p","key","id","postsBlock","AddNewPostFormRedux","onSubmit","addPost","newPostText","maxLength15","maxLengthCreator","reduxForm","form","handleSubmit","Field","textarea","component","Textarea","name","placeholder","validate","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","reset","Profile","comStyle","wrapContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.85d3b601.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3VHgi\",\"posts\":\"MyPosts_posts__1XQ-x\",\"textarea\":\"MyPosts_textarea__3wmNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ishaF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3HvO0\",\"content\":\"Post_content__1w9Dy\",\"iconLike\":\"Post_iconLike__1bwe8\",\"likeCount\":\"Post_likeCount__2dDeQ\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    const [editMode, SetEditMode] = useState(false)\r\n    const [status, EditStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        SetEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        SetEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        SetEditMode(true)\r\n        EditStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        EditStatus(props.status)\r\n    }, [props.status])\r\n\r\n    return (\r\n        <>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                </div>\r\n                : <div>\r\n                    <input autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           onChange={onStatusChange}\r\n                           value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/components/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from '../ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    const getArray = () => profile.contacts.map(el => profile.contacts[el])\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img alt={'avatar'} src={profile.photos.large}/>\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <div>\r\n                    {`Name : ` + profile.fullName}\r\n                </div>\r\n                <div>\r\n                    {`About me: ` + profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    {profile.lookingForAJob === true ? \"Looking for a job\" : \"Not looking for a job\"}\r\n                </div>\r\n                <div>\r\n                    {\"Description of the desired job:  \" + {getArray}}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faThumbsUp} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Post = (props) => {\r\n    return  (\r\n            <div className={s.item}>\r\n            <div className={s.content}>\r\n                <img alt='avatar' src='https://whatsism.com/uploads/posts/2018-07/1530544023_n6fgwzftnvg.jpg'/>\r\n                <span >\r\n                    {props.message}\r\n                    <div className={s.likeCount} >\r\n                       <FontAwesomeIcon icon={faThumbsUp} className={s.iconLike} />\r\n                        {props.likeCount}\r\n                    </div>\r\n                </span>\r\n            </div>\r\n             <div>\r\n                 {/*<FontAwesomeIcon icon={faThumbsUp} className={s.iconLike} /> {props.likeCount}*/}\r\n\r\n             </div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Posts/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator} from \"../../../utils/validator/valodators\";\r\nimport {Textarea} from \"../../common/components/FormsControls/FormsControls\";\r\nimport StandardButton from \"../../common/components/StandartButton/StandartButton\";\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likeCount}/>);\r\n\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <AddNewPostFormRedux onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nconst maxLength15 = maxLengthCreator(15)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                       className={s.textarea}\r\n                       component={Textarea}\r\n                       name=\"newPostText\"\r\n                       placeholder=\"what's new?\"\r\n                       validate={[maxLength15]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <StandardButton>Add post</StandardButton>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'MyPostAddNewPost'})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {reset} from 'redux-form';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n            dispatch(reset('MyPostAddNewPost'))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport comStyle from \"../common/style/Container.module.css\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n    return <div  className={comStyle.wrapContainer}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        <MyPostsContainer />\r\n    </div>\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n            this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus} />\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>  ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}