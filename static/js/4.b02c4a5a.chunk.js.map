{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","activeClassName","activeLink","src","img","name","Message","message","AddMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","fromSendMessage","Field","component","Textarea","placeholder","s1","textarea","StandardButton","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","image","messagesElements","messages","m","comStyle","wrapContainer","dialogsItems","value","sendMessageClick","newMessageElement","mapStateToPropsForRedirect","isAuth","auth","AuthRedirectComponenet","Component","RedirectComponent","this","PATH","LOGIN","React","connect","withAuthRedirect","compose","dispatch","sendMessageCreator"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,WAAa,4BAA4B,QAAU,yBAAyB,SAAW,0BAA0B,gBAAkB,mC,iHCUvPC,EAPI,SAACC,GAChB,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtC,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAIC,gBAAiBL,IAAEM,YAAY,yBAAKC,IAAKT,EAAMU,MAAQV,EAAMW,QCK3FC,EALC,SAACZ,GACb,OAAO,yBAAKC,UAAWC,IAAEW,SAAUb,EAAMa,U,mDCkDvCC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,EAjBL,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aACrB,OACI,0BAAMC,SAAUD,EAAchB,UAAWC,IAAEiB,iBACvC,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXX,KAAK,oBACLY,YAAY,eACZtB,UAAWuB,IAAGC,YAGzB,6BACI,kBAACC,EAAA,EAAD,0BAQDC,EAhDC,SAAC3B,GAEb,IAAI4B,EAAQ5B,EAAM6B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAOD,EAAE3B,GAAIA,GAAI2B,EAAE3B,GAAII,IAAKuB,EAAEE,WACjGC,EAAmBR,EAAMS,SAASL,KAAI,SAAAM,GAAC,OAAI,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASqB,IAAKI,EAAEhC,QASnF,OACI,yBAAKL,UAAWsC,IAASC,eACrB,yBAAKvC,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAEuC,cACbX,GAEL,yBAAK7B,UAAWC,IAAEmC,UACbD,IAGL,kBAACtB,EAAD,CAAqBI,SAfb,SAACwB,GACjB1C,EAAM2C,iBAAiBD,EAAME,wB,wDChBjCC,EAA6B,SAACjB,GAAD,MAAY,CACzCkB,OAAQlB,EAAMmB,KAAKD,S,OCmBjBE,EDhB0B,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKnD,MAAM8C,OACT,kBAACG,EAAcE,KAAKnD,OADI,kBAAC,IAAD,CAAUK,GAAI+C,IAAKC,YAHf,GACXC,IAAML,WAUtC,OAFqCM,YAAQV,EAARU,CAAoCL,GCO9CM,CAAiB7B,GAGjC8B,sBACXF,aApBoB,SAAC3B,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAKD,SAAC6B,GACvB,MAAO,CACHf,iBAAkB,SAACC,GACfc,EAASC,YAAmBf,QAUpCW,CAA6CP","file":"static/js/4.b02c4a5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1hcrN\",\"dialog\":\"Dialogs_dialog__1fZbG\",\"dialogsItems\":\"Dialogs_dialogsItems__zVCYz\",\"activeLink\":\"Dialogs_activeLink__3S8Ci\",\"message\":\"Dialogs_message__1UfRG\",\"messages\":\"Dialogs_messages__3nmop\",\"fromSendMessage\":\"Dialogs_fromSendMessage__1wHvd\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={'/dialogs/' + props.id} activeClassName={s.activeLink}><img src={props.img} />{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport s1 from '../Profile/MyPosts/MyPosts.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/components/FormsControls/FormsControls\";\r\nimport comStyle from \"../common/style/Container.module.css\";\r\nimport StandardButton from \"../common/components/StandardButton/StandardButton\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key = {d.id} id={d.id} img={d.image}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n\r\n\r\n    let addNewMessage = (value) => {\r\n        props.sendMessageClick(value.newMessageElement)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={comStyle.wrapContainer}>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n            </div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.fromSendMessage}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newMessageElement\"\r\n                       placeholder=\"Your message\"\r\n                       className={s1.textarea}\r\n                       />\r\n            </div>\r\n            <div>\r\n                <StandardButton>Send message</StandardButton>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {PATH} from \"../components/Routes\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={PATH.LOGIN}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps= (dispatch) => {\r\n    return {\r\n        sendMessageClick: (newMessageElement) => {\r\n            dispatch(sendMessageCreator(newMessageElement));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst AuthRedirectComponenet = withAuthRedirect(Dialogs)\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponenet))\r\n"],"sourceRoot":""}