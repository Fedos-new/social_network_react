{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","SetEditMode","status","EditStatus","useEffect","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","className","s","inputLogin","style","inputStatus","onDoubleClick","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","StandardButton","primary","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","setEditMode","Preloader","descriptionBlock","alt","src","photos","large","userPhoto","btnFile","target","files","length","initialValues","formData","then","Post","item","content","message","likeCount","icon","faThumbsUp","iconLike","MyPosts","React","memo","postsElements","posts","p","id","postsBlock","AddNewPostFormRedux","addPost","newPostText","maxLength15","maxLengthCreator","Field","textarea","component","name","placeholder","validate","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","reset","Profile","comStyle","wrapContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","login","withRouter"],"mappings":"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","file":"static/js/3.55ee6719.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ishaF\",\"btnFile\":\"ProfileInfo_btnFile__1TpZm\",\"contacts\":\"ProfileInfo_contacts__3DbMQ\",\"inputStatus\":\"ProfileInfo_inputStatus__2NxRH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3HvO0\",\"content\":\"Post_content__1w9Dy\",\"iconLike\":\"Post_iconLike__1bwe8\",\"likeCount\":\"Post_likeCount__2dDeQ\"};","import React, {useEffect, useState} from 'react';\r\nimport s from \"../../Login/Login.module.css\";\r\nimport style from \"./ProfileInfo.module.css\"\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    const [editMode, SetEditMode] = useState(false)\r\n    const [status, EditStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        SetEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        SetEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        SetEditMode(true)\r\n        EditStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        EditStatus(props.status)\r\n    }, [props.status])\r\n\r\n    return (\r\n        <>\r\n            {!editMode\r\n                ? <div>\r\n                    <b>Status</b>: <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                </div>\r\n                : <div>\r\n                    <input autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           onChange={onStatusChange}\r\n                           value={status}\r\n                           className={`${s.inputLogin} ${style.inputStatus}` }\r\n                    />\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks\r\n","import React from \"react\";\r\nimport StandardButton from \"../../common/components/StandardButton/StandardButton\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"../../common/components/FormsControls/FormsControls.module.css\"\r\nimport {createField, Input, Textarea} from \"../../common/components/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <StandardButton primary={'green'}>Save</StandardButton>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}</div>}\r\n        <div>\r\n            <b>Name</b>: {createField('Name', Input, 'fullName', [])}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>: {createField('About Me', Input, 'aboutMe', [])}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField('', Input, 'lookingForAJob', [], {type: \"checkbox\"})}\r\n\r\n        </div>\r\n        <div>\r\n            <b>My professional\r\n                skills</b>: {createField('My professional skills', Textarea, 'lookingForAJobDescription', [])}\r\n\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div className={s.contacts} key={key}>\r\n                <b>{key}</b>{createField(key, Input, 'contacts.'+ key, [])}\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/components/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport StandardButton from \"../../common/components/StandardButton/StandardButton\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img alt={'avatar'} src={profile.photos.large || userPhoto}/>\r\n                {\r\n                    !isOwner && <div>\r\n                        <label className={s.btnFile}>Update photo\r\n                            <input type={\"file\"} onChange={onMainPhotoSelected}/>\r\n                        </label>\r\n                    </div>\r\n                }\r\n\r\n                {editMode\r\n                    ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }}/>\r\n                }\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {!isOwner && <StandardButton primary={'green'} onClick={goToEditMode}>Edit</StandardButton>}\r\n        <div>\r\n            <b>Name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob === true ? \"Yes\" : \"No\"}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n\r\n    return <div className={s.contacts}><b>{contactTitle}</b>: {contactValue}\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faThumbsUp} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Post = (props) => {\r\n    return  (\r\n            <div className={s.item}>\r\n            <div className={s.content}>\r\n                <img alt='avatar' src='https://whatsism.com/uploads/posts/2018-07/1530544023_n6fgwzftnvg.jpg'/>\r\n                <span >\r\n                    {props.message}\r\n                    <div className={s.likeCount} >\r\n                       <FontAwesomeIcon icon={faThumbsUp} className={s.iconLike} />\r\n                        {props.likeCount}\r\n                    </div>\r\n                </span>\r\n            </div>\r\n             <div>\r\n                 {/*<FontAwesomeIcon icon={faThumbsUp} className={s.iconLike} /> {props.likeCount}*/}\r\n\r\n             </div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Posts/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator} from \"../../../utils/validator/valodators\";\r\nimport {Textarea} from \"../../common/components/FormsControls/FormsControls\";\r\nimport StandardButton from \"../../common/components/StandardButton/StandardButton\";\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likeCount}/>);\r\n\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <AddNewPostFormRedux onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nconst maxLength15 = maxLengthCreator(15)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                       className={s.textarea}\r\n                       component={Textarea}\r\n                       name=\"newPostText\"\r\n                       placeholder=\"what's new?\"\r\n                       validate={[maxLength15]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <StandardButton>Add post</StandardButton>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'MyPostAddNewPost'})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {reset} from 'redux-form';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n            dispatch(reset('MyPostAddNewPost'))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport comStyle from \"../common/style/Container.module.css\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n    return <div  className={comStyle.wrapContainer}>\r\n        <ProfileInfo profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}\r\n                     isOwner={props.isOwner}\r\n                     savePhoto={props.savePhoto}\r\n                     saveProfile={props.saveProfile}\r\n        />\r\n        <MyPostsContainer />\r\n    </div>\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                         saveProfile={this.props.saveProfile}\r\n                />\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>  ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}